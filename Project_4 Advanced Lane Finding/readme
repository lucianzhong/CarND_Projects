-Distortion Correction
  compute the camera matrix and distortion co-efficients to undistort the image

-Gradients and color thresholds
  apply thresholds on gradients and colors (in RGB and HLS color spaces) to obtain a binary thresholded image 
 
-Perspective transform ("birds-eye view")
  extract the vertices to perform a perspective transform
  
-Detect lane pixels (sliding window search)
  perform a sliding window search, starting with the base likely positions of the 2 lanes, calculated from the histogram. 
  using 10 windows of width 100 pixels.The x & y coordinates of non zeros pixels are found, a polynomial is fit for 
  these coordinates and the lane lines are drawn.
 
-searching around previosly detected lane line 
  Since consecutive frames are likely to have lane lines in roughly similar positions, we search around a margin of 50 pixels of the previously detected lane lines

-Inverse transform and output For the final image:
    Paint the lane area
    Perform an inverse perspective transform
    Combine the precessed image with the original image



Advanced Lane Finding Project:
The goals / steps of this project are the following:

  1.Compute the camera calibration matrix and distortion coefficients given a set of chessboard images.
  2.Apply a distortion correction to raw images.
  3.Use color transforms, Sobel operator to create a thresholded binary image.
  4.Apply a perspective transform to rectify binary image ("birds-eye view").
  5.Detect lane pixels and fit to find the lane boundary.
  6.Determine the curvature of the lane and vehicle position with respect to center.
  7.Warp the detected lane boundaries back onto the original image.
  8.Output visual display of the lane boundaries and numerical estimation of lane curvature and vehicle position.

